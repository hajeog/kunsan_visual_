



함수 네임스페이스를 자신이 지은 프로젝트 명으로(C~~Doc/View) 변경해 주어야 합니다.

헤더 파일에도 함수 선언을 해야합니다.





void "자신 프로젝트 명"::Convolve(unsigned char** inpuptImg, unsigned char** resultImg, int cols, int rows, float mask[][3], int bias, int depth)
{
	int i, j, x, y;
	int red, green, blue;
	int sum;
	unsigned char** tmpImg;
	// 기억장소 할당 
	tmpImg = (unsigned char**)malloc((imageHeight + 2) * sizeof(unsigned char*));

	for (i = 0; i < imageHeight + 2; i++)
	{
		tmpImg[i] = (unsigned char*)malloc((imageWidth + 2) * depth);
	}
	// 0-삽입을 위해 0으로 초기화 
	for (y = 0; y < imageHeight + 2; y++)
	{
		for (x = 0; x < (imageWidth + 2) * depth; x++)
		{
			tmpImg[y][x] = 0;
		}
	}
	// 영상 복사 
	for (y = 1; y < imageHeight + 1; y++)
	{
		for (x = 1; x < imageWidth + 1; x++)
		{
			if (depth == 1)
			{
				tmpImg[y][x] = inputImg[y - 1][x - 1];
			}
			else if (depth == 3)
			{
				tmpImg[y][3 * x] = inputImg[y - 1][3 * (x - 1)];
				tmpImg[y][3 * x + 1] = inputImg[y - 1][3 * (x - 1) + 1];
				tmpImg[y][3 * x + 2] = inputImg[y - 1][3 * (x - 1) + 2];
			}
		}
	}
	for (y = 0; y < imageHeight; y++)
	{
		for (x = 0; x < imageWidth; x++)
		{
			if (depth == 1)
			{
				sum = 0;
				for (i = 0; i < 3; i++)
				{
					for (j = 0; j < 3; j++)
					{
						sum += (int)(tmpImg[y + i][x + j] * mask[i][j]);
					}
				}

				sum = sum + bias;

				if (sum > 255) sum = 255;
				if (sum < 0) sum = 0;
				resultImg[y][x] = (unsigned char)sum;
			}
			else if (depth == 3)
			{
				red = 0;
				green = 0;
				blue = 0;
				for (i = 0; i < 3; i++)
				{
					for (j = 0; j < 3; j++)
					{
						red += (int)(tmpImg[y + i][3 * (x + j)] * mask[i][j]);
						green += (int)(tmpImg[y + i][3 * (x + j) + 1] * mask[i][j]);
						blue += (int)(tmpImg[y + i][3 * (x + j) + 2] * mask[i][j]);
					}
				}
				red = red + bias;
				green = green + bias;
				blue = blue + bias;
				if (red > 255) red = 255;
				if (red < 0) red = 0;
				if (green > 255) green = 255;
				if (green < 0) green = 0;
				if (blue > 255) blue = 255;
				if (blue < 0) blue = 0;
				resultImg[y][3 * x] = (unsigned char)red;
				resultImg[y][3 * x + 1] = (unsigned char)green;
				resultImg[y][3 * x + 2] = (unsigned char)blue;
			}
		}
	}
	// 기억장소 반환 
	for (i = 0; i < imageHeight + 2; i++)
	{
		free(tmpImg[i]);
	}
	free(tmpImg);
}
